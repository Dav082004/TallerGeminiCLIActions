name: 🔍 Simple Issue Triage

on:
  issue_comment:
    types: [created]

permissions:
  contents: read
  issues: write

jobs:
  simple_triage:
    runs-on: ubuntu-latest
    if: contains(github.event.comment.body, '@gemini-cli') && contains(github.event.comment.body, '/simple')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: 📝 Simple Triage Comment
        uses: actions/github-script@v7
        with:
          script: |
            const issue_title = context.payload.comment.issue.title;
            const issue_body = context.payload.comment.issue.body;
            
            const comment_body = `## 🤖 Gemini CLI Triage Analysis

**Issue:** ${issue_title}

**Quick Analysis:**
- **Type:** ${issue_title.toLowerCase().includes('bug') || issue_title.toLowerCase().includes('crash') || issue_title.toLowerCase().includes('error') ? 'Bug' : 'Enhancement'}
- **Priority:** ${issue_title.toLowerCase().includes('crash') || issue_title.toLowerCase().includes('critical') ? 'High' : 'Medium'}
- **Team:** ${issue_title.toLowerCase().includes('ui') || issue_title.toLowerCase().includes('frontend') ? 'Frontend' : 'Backend'}

**Next Steps:**
1. Reproduce the issue
2. Add appropriate labels
3. Assign to relevant team member

---
🤖 *This is a simplified triage analysis*
💡 *For full Gemini AI analysis, comment: \`@gemini-cli /triage\`*`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.comment.issue.number,
              body: comment_body
            });
