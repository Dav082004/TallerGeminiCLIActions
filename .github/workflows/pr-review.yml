name: � Revisión de PR con Gemini CLI

on:
  pull_request:
    types: [opened, synchronize, reopened]
  pull_request_review_comment:
    types: [created]
  issue_comment:
    types: [created]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  review:
    runs-on: ubuntu-latest
    if: >
      (github.event_name == 'pull_request') ||
      (github.event_name == 'issue_comment' && 
       github.event.issue.pull_request &&
       contains(github.event.comment.body, '@gemini-cli') && 
       contains(github.event.comment.body, '/revisar'))

    steps:
      - name: Descargar repositorio
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Obtener diferencias del PR
        id: pr_diff
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            PR_NUMBER=${{ github.event.pull_request.number }}
          else
            PR_NUMBER=${{ github.event.issue.number }}
          fi

          # Obtener el diff del PR
          gh pr diff $PR_NUMBER > pr_diff.txt || echo "No se pudo obtener el diff"

          # Truncar si es muy grande (límites de la API de GitHub)
          if [ -f pr_diff.txt ]; then
            head -n 200 pr_diff.txt > pr_diff_truncated.txt
            mv pr_diff_truncated.txt pr_diff.txt
          fi
        env:
          GH_TOKEN: ${{ github.token }}

      - name: 🤖 Ejecutar Gemini CLI para Revisión de PR
        id: gemini_review
        uses: google-github-actions/run-gemini-cli@v0
        with:
          gemini_api_key: ${{ secrets.GEMINI_API_KEY }}
          prompt: |
            Eres un experto revisor de código para el proyecto TaskFlow Manager.

            CONTEXTO: Esta es una aplicación web de gestión de tareas con:
            - Frontend: HTML, CSS, JavaScript vanilla
            - Backend: Node.js con Express
            - Enfoque en código limpio y mantenible

            TAREA: Revisa los siguientes cambios del pull request.

            Título del PR: ${{ github.event.pull_request.title || 'Solicitud de Revisión Manual' }}
            Descripción del PR: ${{ github.event.pull_request.body || 'Sin descripción proporcionada' }}
            Autor del PR: ${{ github.event.pull_request.user.login || github.event.comment.user.login }}

            CAMBIOS EN EL CÓDIGO:
            ```diff
            $(cat pr_diff.txt 2>/dev/null || echo "No hay diff disponible")
            ```

            CRITERIOS DE REVISIÓN:
            1. **Calidad del Código**: Verificar código limpio y legible
            2. **Seguridad**: Buscar vulnerabilidades potenciales
            3. **Rendimiento**: Identificar oportunidades de optimización
            4. **Mejores Prácticas**: Asegurar seguimiento de convenciones JavaScript/Node.js
            5. **Testing**: Sugerir mejoras en cobertura de pruebas
            6. **Documentación**: Verificar si el código es autodocumentado

            ÁREAS ESPECÍFICAS A REVISAR:
            - Validación y sanitización de entrada
            - Manejo de errores
            - Memory leaks o problemas de rendimiento
            - Uso apropiado de async/await
            - Organización y estructura del código
            - Mejores prácticas de seguridad

            FORMATO DE RESPUESTA:
            ## 🔍 Resumen de Revisión de Código

            **Evaluación General:** [Aprobar/Solicitar Cambios/Comentar]
            **Puntuación de Calidad:** [1-10]

            ### ✅ Fortalezas
            - Punto 1
            - Punto 2

            ### ⚠️ Problemas Encontrados
            **Alta Prioridad:**
            - Problema 1 (línea X)
            - Problema 2 (línea Y)

            **Prioridad Media:**
            - Problema 3
            - Problema 4

            **Baja Prioridad/Sugerencias:**
            - Sugerencia 1
            - Sugerencia 2

            ### 🚀 Oportunidades de Optimización
            - Optimización 1
            - Optimización 2

            ### 🧪 Recomendaciones de Testing
            - Caso de prueba 1
            - Caso de prueba 2

            ### 📚 Sugerencias de Documentación
            - Mejora de documentación 1
            - Mejora de documentación 2

            ---
            **Próximos Pasos:** [Acciones específicas que el autor debe tomar]

      - name: 📝 Publicar Comentario de Revisión
        uses: actions/github-script@v7
        with:
          script: |
            const prNumber = context.issue.number || context.payload.pull_request.number;
            const reviewBody = `${{ steps.gemini_review.outputs.summary }}

            ---
            🤖 *Esta revisión fue realizada automáticamente por Gemini CLI*
            💡 *Para revisión manual, comenta: \`@gemini-cli /revisar\`*
            📋 *Revisión basada en estándares de código de TaskFlow Manager*`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              body: reviewBody
            });
