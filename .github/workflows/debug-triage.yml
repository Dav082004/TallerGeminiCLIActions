name: 🔍 Debug Issue Triage

on:
  issue_comment:
    types: [created]

permissions:
  contents: read
  issues: write

jobs:
  debug_triage:
    runs-on: ubuntu-latest
    if: contains(github.event.comment.body, '@gemini-cli') && contains(github.event.comment.body, '/debug')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: 🤖 Run Gemini CLI for Debug
        id: gemini_debug
        uses: google-github-actions/run-gemini-cli@v0
        with:
          gemini_api_key: ${{ secrets.GEMINI_API_KEY }}
          prompt: |
            Analyze this issue and respond with a simple triage analysis.
            
            Issue: ${{ github.event.comment.issue.title }}
            
            Provide a brief analysis in markdown format.

      - name: 🔍 Debug Outputs
        uses: actions/github-script@v7
        with:
          script: |
            const comment_body = `## 🔍 Debug Information
            
Testing different output variables:
1. response: ${{ steps.gemini_debug.outputs.response }}
2. text: ${{ steps.gemini_debug.outputs.text }}  
3. content: ${{ steps.gemini_debug.outputs.content }}
4. result: ${{ steps.gemini_debug.outputs.result }}
5. output: ${{ steps.gemini_debug.outputs.output }}

Debug completed - check which one has content`;

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.comment.issue.number,
              body: comment_body
            });
